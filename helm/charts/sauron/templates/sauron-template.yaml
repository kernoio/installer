apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Chart.Name }}-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: {{ .Chart.Name }}
    control-plane: {{ .Chart.Name }}
  name: {{ .Chart.Name }}-metrics-service
  namespace: {{ .Values.global.namespace }}
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: {{ .Chart.Name }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: metadata-service
    app.kubernetes.io/created-by: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Chart.Name }}-metadata-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: {{ .Chart.Name }}
  name: {{ .Chart.Name }}-service
  namespace: {{ .Values.global.namespace }}
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: 9443
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    control-plane: {{ .Chart.Name }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Chart.Name }}-webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: {{ .Chart.Name }}
  name: {{ .Chart.Name }}-webhook-service
  namespace: kerno
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: {{ .Chart.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Chart.Name }}
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: {{ .Chart.Name }}
    control-plane: {{ .Chart.Name }}
    version: {{ .Values.global.appVersion }}
  name: {{ .Chart.Name }}
  namespace: kerno
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: {{ .Chart.Name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - command:
        - /manager
        env:
        - name: ENVIRONMENT
          value: {{ .Values.global.environment }}
        - name: LOG_LEVEL
          value: {{ .Values.logLevel | default .Values.global.logLevel | lower }}
        - name: METADATA_SERVICE_PORT
          value: "9092"
        - name: INSTALLATION_KEY
          valueFrom:
            secretKeyRef:
              key: INSTALLATION_KEY
              name: installation-config
        - name: POD_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        {{- with .Values.global.sauron.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        image: {{ .Values.global.imageRepository }}/{{ .Chart.Name }}:{{ .Values.global.sauron.image.tag | default .Values.global.environment }}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /config/certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kerno-sa
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: kerno-tls-certs
---
apiVersion: scanners.kerno.io/v1
kind: Scanner
metadata:
  labels:
    app.kuberentes.io/managed-by: kustomize
    app.kubernetes.io/created-by: {{ .Chart.Name }}
    app.kubernetes.io/instance: kerno-scanner
    app.kubernetes.io/name: scanner
    app.kubernetes.io/part-of: {{ .Chart.Name }}
  name: kerno-scanner
  namespace: kerno
spec: null